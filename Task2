<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
        <h1>To-Do List</h1>
        <div class="input-section">
            <input type="text" id="task-input" placeholder="Add a new task">
            <button id="add-task-btn">Add Task</button>
        </div>
        <ul id="task-list">
            <!-- Tasks will be displayed here -->
        </ul>
        <button id="clear-tasks-btn">Clear All Tasks</button>
    </div>
    <script src="script.js"></script>
</body>
</html>


* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: Arial, sans-serif;
    background-color: #f7f7f7;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

.container {
    background-color: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 300px;
    text-align: center;
}

input[type="text"] {
    width: 70%;
    padding: 10px;
    border-radius: 5px;
    border: 1px solid #ccc;
    margin-right: 10px;
}

button {
    padding: 10px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

button:hover {
    background-color: #0056b3;
}

ul {
    list-style-type: none;
    margin-top: 20px;
}

li {
    background-color: #f4f4f4;
    padding: 10px;
    border-bottom: 1px solid #ddd;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

li button {
    background-color: #ff4d4d;
    border: none;
    padding: 5px;
    cursor: pointer;
}

li button:hover {
    background-color: #ff1a1a;
}

#clear-tasks-btn {
    margin-top: 20px;
    background-color: #ff4d4d;
}

#clear-tasks-btn:hover {
    background-color: #ff1a1a;
}


// Select DOM elements
const taskInput = document.getElementById('task-input');
const addTaskBtn = document.getElementById('add-task-btn');
const taskList = document.getElementById('task-list');
const clearTasksBtn = document.getElementById('clear-tasks-btn');

// Load tasks from local storage on page load
document.addEventListener('DOMContentLoaded', loadTasksFromLocalStorage);

// Add task event
addTaskBtn.addEventListener('click', addTask);

// Clear all tasks event
clearTasksBtn.addEventListener('click', clearTasks);

// Function to add a new task
function addTask() {
    const task = taskInput.value;

    if (task === '') {
        alert('Please enter a task.');
        return;
    }

    // Create task item
    const li = document.createElement('li');
    li.textContent = task;

    // Create delete button for each task
    const deleteBtn = document.createElement('button');
    deleteBtn.textContent = 'Delete';
    deleteBtn.classList.add('delete-task-btn');
    deleteBtn.onclick = removeTask;

    // Append delete button to the task item
    li.appendChild(deleteBtn);

    // Append task item to the task list
    taskList.appendChild(li);

    // Save to local storage
    saveTaskToLocalStorage(task);

    // Clear the input field
    taskInput.value = '';
}

// Function to remove a single task
function removeTask(e) {
    const taskItem = e.target.parentElement;
    const taskText = taskItem.textContent.replace('Delete', '').trim();

    // Remove task from the list
    taskItem.remove();

    // Remove task from local storage
    removeTaskFromLocalStorage(taskText);
}

// Function to clear all tasks
function clearTasks() {
    // Clear all tasks from the task list
    taskList.innerHTML = '';

    // Clear all tasks from local storage
    localStorage.removeItem('tasks');
}

// Function to save task to local storage
function saveTaskToLocalStorage(task) {
    let tasks = getTasksFromLocalStorage();
    tasks.push(task);
    localStorage.setItem('tasks', JSON.stringify(tasks));
}

// Function to get tasks from local storage
function getTasksFromLocalStorage() {
    let tasks;
    if (localStorage.getItem('tasks') === null) {
        tasks = [];
    } else {
        tasks = JSON.parse(localStorage.getItem('tasks'));
    }
    return tasks;
}

// Function to load tasks from local storage on page load
function loadTasksFromLocalStorage() {
    let tasks = getTasksFromLocalStorage();

    tasks.forEach(task => {
        // Create task item
        const li = document.createElement('li');
        li.textContent = task;

        // Create delete button for each task
        const deleteBtn = document.createElement('button');
        deleteBtn.textContent = 'Delete';
        deleteBtn.classList.add('delete-task-btn');
        deleteBtn.onclick = removeTask;

        // Append delete button to the task item
        li.appendChild(deleteBtn);

        // Append task item to the task list
        taskList.appendChild(li);
    });
}

// Function to remove task from local storage
function removeTaskFromLocalStorage(taskToRemove) {
    let tasks = getTasksFromLocalStorage();
    tasks = tasks.filter(task => task !== taskToRemove);
    localStorage.setItem('tasks', JSON.stringify(tasks));
}
